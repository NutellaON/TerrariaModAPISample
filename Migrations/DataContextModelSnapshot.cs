// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TerrariaAPI.Data;

#nullable disable

namespace TerrariaAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TerrariaAPI.Models.Accessory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessoryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.ToTable("Accessories");
                });

            modelBuilder.Entity("TerrariaAPI.Models.Armor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("SetBonus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.ToTable("Armors");
                });

            modelBuilder.Entity("TerrariaAPI.Models.CraftingRecipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ResultItemId")
                        .HasColumnType("int");

                    b.Property<int>("ResultQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResultItemId");

                    b.ToTable("CraftingRecipes");
                });

            modelBuilder.Entity("TerrariaAPI.Models.CraftingRecipeMaterials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CraftingRecipeId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialItemId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CraftingRecipeId");

                    b.HasIndex("MaterialItemId");

                    b.ToTable("CraftingRecipeMaterials");
                });

            modelBuilder.Entity("TerrariaAPI.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SellValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tooltip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("TerrariaAPI.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AttackSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("TerrariaAPI.Models.Accessory", b =>
                {
                    b.HasOne("TerrariaAPI.Models.Item", "Item")
                        .WithOne("Accessory")
                        .HasForeignKey("TerrariaAPI.Models.Accessory", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("TerrariaAPI.Models.Armor", b =>
                {
                    b.HasOne("TerrariaAPI.Models.Item", "Item")
                        .WithOne("Armor")
                        .HasForeignKey("TerrariaAPI.Models.Armor", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("TerrariaAPI.Models.CraftingRecipe", b =>
                {
                    b.HasOne("TerrariaAPI.Models.Item", "ResultItem")
                        .WithMany("CraftingRecipes")
                        .HasForeignKey("ResultItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResultItem");
                });

            modelBuilder.Entity("TerrariaAPI.Models.CraftingRecipeMaterials", b =>
                {
                    b.HasOne("TerrariaAPI.Models.CraftingRecipe", "CraftingRecipe")
                        .WithMany("Materials")
                        .HasForeignKey("CraftingRecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TerrariaAPI.Models.Item", "MaterialItem")
                        .WithMany()
                        .HasForeignKey("MaterialItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CraftingRecipe");

                    b.Navigation("MaterialItem");
                });

            modelBuilder.Entity("TerrariaAPI.Models.Weapon", b =>
                {
                    b.HasOne("TerrariaAPI.Models.Item", "Item")
                        .WithOne("Weapon")
                        .HasForeignKey("TerrariaAPI.Models.Weapon", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("TerrariaAPI.Models.CraftingRecipe", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("TerrariaAPI.Models.Item", b =>
                {
                    b.Navigation("Accessory")
                        .IsRequired();

                    b.Navigation("Armor")
                        .IsRequired();

                    b.Navigation("CraftingRecipes");

                    b.Navigation("Weapon")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
